/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/arrow.js":
/*!**********************!*\
  !*** ./src/arrow.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Arrow; });\n/* harmony import */ var _board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board */ \"./src/board.js\");\n/* harmony import */ var _monster_sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./monster_sprite */ \"./src/monster_sprite.js\");\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./player */ \"./src/player.js\");\n\r\n\r\n\r\n\r\nclass Arrow {\r\n  constructor(startPos, nextPos, mapPos, direction) {\r\n    this.currentPos = startPos\r\n    this.nextPos = nextPos;\r\n    this.timeStart = 0;\r\n    this.delayMove = 500;\r\n    this.size = [30, 30]; \r\n    this.mapPos = mapPos;\r\n    this.sampleBoard = new _board__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n    this.direction = direction;\r\n    this.lastDir = \"right\"\r\n    this.moving = false;\r\n    this.sprites = {\r\n      \"up\": new _monster_sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/knightFrames.png\", { 0: { pos: [5, 167], size: [35, 39] },\r\n                                                                   1: { pos: [40, 166], size: [40, 39] },\r\n                                                                   2: { pos: [85, 165], size: [40, 39] }\r\n                                                                  },\r\n                                                                  200), \r\n      \"right\": new _monster_sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/knightFrames.png\", { 0: { pos: [5, 167], size: [35, 39] },\r\n                                                                     1: { pos: [40, 166], size: [40, 39] },\r\n                                                                     2: { pos: [85, 165], size: [40, 39] }\r\n                                                                   },\r\n                                                                   200), \r\n      \"down\": new _monster_sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/knightFrames.png\", { 0: { pos: [5, 167], size: [35, 39] },\r\n                                                                    1: { pos: [40, 166], size: [40, 39] },\r\n                                                                    2: { pos: [85, 165], size: [40, 39] }\r\n                                                                    },\r\n                                                                    200), \r\n      \"left\": new _monster_sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/knightFrames.png\", { 0: { pos: [84, 30], size: [40, 39] },\r\n                                                                    1: { pos: [50, 29], size: [34, 39] },\r\n                                                                    2: { pos: [15, 29], size: [34, 39] }\r\n                                                                    },\r\n                                                                    200)\r\n\r\n    }\r\n    \r\n  }\r\n  \r\n  move(x, y) {\r\n    this.currentPos = [x, y];\r\n    this.nextPos = [x, y];\r\n    this.mapPos = [\r\n      (this.sampleBoard.tileWidth * x) + ((this.sampleBoard.tileWidth - this.size[0]) / 2), \r\n      (this.sampleBoard.tileHeight * y) + ((this.sampleBoard.tileHeight - this.size[1]) / 2)\r\n    ];\r\n  }\r\n\r\n  handleMove(currentTime) {\r\n    if (this.currentPos[0] === this.nextPos[0] && this.currentPos[1] === this.nextPos[1]) return false;\r\n\r\n    if ((currentTime - this.timeStart) >= this.delayMove ) {\r\n      this.move(this.nextPos[0], this.nextPos[1]);\r\n      this.moving = !this.moving\r\n    } else {\r\n      this.getMapPos();\r\n      this.checkDirectionAndAdjust(currentTime);\r\n      this.mapPos[0] = Math.round(this.mapPos[0]);\r\n      this.mapPos[1] = Math.round(this.mapPos[1]);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getMapPos() {// \r\n    this.mapPos[0] = (this.currentPos[0] * this.sampleBoard.tileWidth) + ((this.sampleBoard.tileWidth - this.size[0]) / 2);\r\n    this.mapPos[1] = (this.currentPos[1] * this.sampleBoard.tileHeight) + ((this.sampleBoard.tileHeight - this.size[1]) / 2);\r\n  }\r\n\r\n  checkDirectionAndAdjust(currentTime) {\r\n    if (this.nextPos[0] !== this.currentPos[0]) {\r\n      let pixelDist = (this.sampleBoard.tileWidth / this.delayMove) * (currentTime - this.timeStart);\r\n\r\n      if (this.nextPos[0] < this.currentPos[0]) {\r\n        this.mapPos[0] += (0 - pixelDist);\r\n      } else {\r\n        this.mapPos[0] += (pixelDist);\r\n      }\r\n    } else {\r\n      let pixelDist = (this.sampleBoard.tileHeight / this.delayMove) * (currentTime - this.timeStart);\r\n\r\n      if (this.nextPos[1] < this.currentPos[1]) {\r\n        this.mapPos[1] += (0 - pixelDist);\r\n      } else {\r\n        this.mapPos[1] += (pixelDist);\r\n      }\r\n    }\r\n  }\r\n\r\n  toIndex(x, y) {\r\n    return ((y * this.sampleBoard.mapWidth) + x);\r\n  }\r\n\r\n  isWalkable(x, y) {\r\n    if (x < 0 || x >= this.sampleBoard.mapWidth || y < 0 || y >= this.sampleBoard.mapHeight) return false;\r\n    if (this.sampleBoard.tileTypes[this.sampleBoard.gameMap[this.toIndex(x, y)]].floor !== this.sampleBoard.floorTypes.walkable) return false; \r\n    return true;\r\n  }\r\n\r\n  canMoveUp() {\r\n    return this.isWalkable(this.currentPos[0], this.currentPos[1] - 1);\r\n  }\r\n\r\n  canMoveDown() {\r\n    return this.isWalkable(this.currentPos[0], this.currentPos[1] + 1);\r\n  }\r\n\r\n  canMoveLeft() {\r\n    return this.isWalkable(this.currentPos[0] - 1, this.currentPos[1]);\r\n  }\r\n\r\n  canMoveRight() {\r\n    return this.isWalkable(this.currentPos[0] + 1, this.currentPos[1]);\r\n  }\r\n\r\n  moveUp(currentGameTime) {\r\n    this.nextPos[1] -= 1;\r\n    this.timeStart = currentGameTime;\r\n    if (this.lastDir === \"left\") this.direction = \"left\";\r\n    this.moving = true;\r\n  }\r\n  \r\n  moveDown(currentGameTime) {\r\n    this.nextPos[1] += 1;\r\n    this.timeStart = currentGameTime;\r\n    if (this.lastDir === \"left\") this.direction = \"left\";\r\n    this.moving = true;\r\n  }\r\n\r\n  moveLeft(currentGameTime) {\r\n    this.nextPos[0] -= 1;\r\n    this.timeStart = currentGameTime;\r\n    this.direction = \"left\";\r\n    this.moving = true; \r\n  }\r\n\r\n  moveRight(currentGameTime) {\r\n    this.nextPos[0] += 1;\r\n    this.timeStart = currentGameTime;\r\n    this.direction = \"right\";\r\n    this.moving = true;\r\n  }\r\n\r\n}\r\n\r\n  // moveUpLeft(currentGameTime) {\r\n  //   this.nextPos[0] -= 1;  NEEDS WORK-ANIMATION\r\n  //   this.nextPos[1] -= 1;\r\n  //   this.timeStart = currentGameTime;\r\n  //   this.direction = \"upLeft\"\r\n  //   this.moving = true;\r\n  // }\r\n  \n\n//# sourceURL=webpack:///./src/arrow.js?");

/***/ }),

/***/ "./src/board.js":
/*!**********************!*\
  !*** ./src/board.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Board; });\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player */ \"./src/player.js\");\n/* harmony import */ var _sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sprite */ \"./src/sprite.js\");\n\r\n\r\n\r\nclass Board {\r\n  constructor() {\r\n    this.gameBoard = document.getElementById(\"gameBoard\"); \r\n    this.ctx = this.gameBoard.getContext('2d');\r\n    this.gameBoard.width = 1500;\r\n    this.gameBoard.height = 700;\r\n    this.tileWidth = 70;\r\n    this.tileHeight = 70;\r\n    this.mapWidth = 20;\r\n    this.mapHeight = 10;\r\n    this.gameMap =  [\r\n  //   0   1   2   3  4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19 \r\n      28, 21, 21, 21, 29, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, // 0\r\n      28, 18, 15, 15, 29, 28, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 20, // 1\r\n      28, 16, 12, 14, 21, 21, 18, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 20, // 2\r\n      28, 16, 12, 13, 15, 15, 12, 12, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, // 3\r\n      28, 16, 12, 12, 12, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 12, 14, 14, 14, 20, // 4\r\n      28, 16, 14, 14, 14, 14, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 20, // 5\r\n      28, 16, 12, 12, 32, 33, 16, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 20, // 6\r\n      28, 16, 12, 12, 29, 28, 16, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 20, // 7\r\n      30, 21, 21, 21, 31, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 20, // 8\r\n      20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20  // 9\r\n\r\n    ];  \r\n    \r\n    this.floorTypes = {\r\n      solid: 0,\r\n      walkable: 1\r\n    };\r\n\r\n\r\n    this.tileTypes = {\r\n      20: { type: \"outOfMap\", floor: this.floorTypes.solid, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [14, 191], [70, 70]) },\r\n      21: { type: \"xWall\", floor: this.floorTypes.solid, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [13, 102], [70, 70]) },\r\n      22: { type: \"xWallPillDown\", floor: this.floorTypes.solid, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [103, 104], [70, 70]) },\r\n      23: { type: \"xWallPillUp\", floor: this.floorTypes.solid, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [456, 108], [70, 70]) },\r\n      24: { type: \"xWallDoorFrameR\", floor: this.floorTypes.solid, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [200, 101], [70, 70]) },\r\n      25: { type: \"xWallDoorFrameL\", floor: this.floorTypes.solid, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [207, 144], [70, 70]) },\r\n      26: { type: \"xDoor\", floor: this.floorTypes.solid, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [103, 194], [70, 70]) },\r\n      27: { type: \"xWallDecor\", floor: this.floorTypes.solid, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [165, 106], [70, 70]) },\r\n      28: { type: \"yWallL\", floor: this.floorTypes.solid, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [623, 107], [70, 70]) },\r\n      29: { type: \"yWallR\", floor: this.floorTypes.solid, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [539, 106], [70, 70]) },\r\n      // 10: { type: \"yDoor\", floor: this.floorTypes.solid, sprite: new Sprite(\"./src/images/dungeonTiles.png\", [13, 95], [70, 70]) },\r\n      // 11: { type: \"spikes\", floor: this.floorTypes.solid, sprite: new Sprite(\"./src/images/dungeonTiles.png\", [13, 95], [70, 70]) },\r\n      12: { type: \"groundReg\", floor: this.floorTypes.walkable, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [100, 7], [70, 70]) },\r\n      13: { type: \"groundReg2\", floor: this.floorTypes.walkable, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [189, 10], [70, 70]) },\r\n      14: { type: \"groundReg3\", floor: this.floorTypes.walkable, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [370, 12], [70, 70]) },\r\n      15: { type: \"groundTop\", floor: this.floorTypes.walkable, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [10, 7], [70, 70]) },\r\n      16: { type: \"groundL\", floor: this.floorTypes.walkable, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [459, 13], [70, 70]) },\r\n      17: { type: \"groundR\", floor: this.floorTypes.walkable, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [624, 15], [70, 70]) },\r\n      18: { type: \"groundLCorner\", floor: this.floorTypes.walkable, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [280, 10], [70, 70]) },\r\n      19: { type: \"groundRCorner\", floor: this.floorTypes.walkable, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [543, 14], [70, 70]) },\r\n      30: { type: \"bottomCornerPillL\", floor: this.floorTypes.solid, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [194, 196], [70, 70]) },\r\n      31: { type: \"bottomCornerPillR\", floor: this.floorTypes.solid, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [283, 197], [70, 70]) },\r\n      32: { type: \"bottomCornerUpL\", floor: this.floorTypes.solid, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [368, 198], [70, 70]) },\r\n      33: { type: \"bottomCornerUpR\", floor: this.floorTypes.solid, sprite: new _sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/dungeonTiles.png\", [455, 198], [70, 70]) }\r\n    };\r\n\r\n    // this.directions = {\r\n    //   up: 0,\r\n    //   right: 1,\r\n    //   down: 2,\r\n    //   left: 3\r\n    // };\r\n  }\r\n\r\n\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./src/board.js?");

/***/ }),

/***/ "./src/character_sprite.js":
/*!*********************************!*\
  !*** ./src/character_sprite.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CharacterSprite; });\nclass CharacterSprite {\r\n  constructor(url, frames, aniTime) {\r\n    this.url = url;\r\n    // this.speed= speed;\r\n    this.frames = frames; \r\n    this.aniTime = aniTime;\r\n  }\r\n  \r\n};\n\n//# sourceURL=webpack:///./src/character_sprite.js?");

/***/ }),

/***/ "./src/game.js":
/*!*********************!*\
  !*** ./src/game.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Game; });\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player */ \"./src/player.js\");\n/* harmony import */ var _monster__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./monster */ \"./src/monster.js\");\n/* harmony import */ var _board__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./board */ \"./src/board.js\");\n/* harmony import */ var _keys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./keys */ \"./src/keys.js\");\n/* harmony import */ var _sprite__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sprite */ \"./src/sprite.js\");\n/* harmony import */ var _arrow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./arrow */ \"./src/arrow.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Game {\r\n  constructor() {\r\n    this.board = new _board__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n    this.player = new _player__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n    this.monsters = [];\r\n    this.arrows = [];\r\n    this.keys = _keys__WEBPACK_IMPORTED_MODULE_3__[\"keysDown\"];\r\n    this.currentSecond = 0;\r\n    this.frameCount = 0;\r\n    this.framesLastSecond = 0;\r\n    this.lastFrameTime = 0; \r\n    this.drawGame = this.drawGame.bind(this)\r\n  }\r\n\r\n  \r\n  drawGame() {\r\n    let currentFrameTime = Date.now();\r\n    let timeElapsed = currentFrameTime - this.lastFrameTime\r\n\r\n    let sec = Math.floor(Date.now()/1000);\r\n    if (sec !== this.currentSecond) {\r\n      this.currentSecond = sec;\r\n      this.framesLastSecond = this.frameCount; \r\n      this.frameCount = 1;\r\n    } else {\r\n      this.frameCount++;\r\n    }\r\n    \r\n\r\n    if (this.keys[32]) {\r\n      this.arrows.push(new _arrow__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this.player.currentPos, [(this.player.currentPos[0] + this.player.shootDir[this.player.direction][0]), (this.player.currentPos[1] + this.player.shootDir[this.player.direction][1])] , this.player.mapPos, this.player.direction));\r\n      this.keys[32] = false;\r\n    }\r\n\r\n    if (!this.player.handleMove(currentFrameTime)) {\r\n      this.checkValidMove(currentFrameTime)\r\n    }\r\n\r\n    for (let y = 0; y < this.board.mapHeight; y++) {\r\n      for (let x = 0; x < this.board.mapWidth; x++) {\r\n        let tile =  this.board.tileTypes[this.board.gameMap[this.player.toIndex(x, y)]];\r\n        let tileset = new Image();\r\n        tileset.src = tile.sprite.url;\r\n        this.board.ctx.drawImage(tileset, tile.sprite.pos[0], tile.sprite.pos[1], tile.sprite.size[0], tile.sprite.size[1], (x * this.board.tileWidth), (y * this.board.tileHeight), this.board.tileWidth, this.board.tileHeight)\r\n      }\r\n    }\r\n\r\n    let spritePlayer = this.player.sprites[this.player.direction]\r\n    let toonSet = new Image();\r\n    toonSet.src = spritePlayer.url\r\n    let totalSpriteTime = 0;\r\n\r\n    for (let s in spritePlayer.frames) {\r\n      spritePlayer.frames[s]['start'] = totalSpriteTime;\r\n      totalSpriteTime += spritePlayer.aniTime;\r\n      spritePlayer.frames[s]['end'] = totalSpriteTime;\r\n    }\r\n\r\n    spritePlayer['totalSpriteDuration'] = totalSpriteTime;\r\n    \r\n    let toon = this.getFrame(spritePlayer.frames, spritePlayer.totalSpriteDuration, currentFrameTime, this.player.moving)\r\n    this.board.ctx.drawImage(toonSet, toon.pos[0], toon.pos[1], toon.size[0], toon.size[1], this.player.mapPos[0], this.player.mapPos[1], this.player.size[0], this.player.size[1])\r\n  \r\n\r\n    \r\n    while (this.monsters.length < 1) {\r\n      let monster = new _monster__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n      this.monsters.push(monster);\r\n    }\r\n\r\n    if (!this.monsters[0].handleMove(currentFrameTime)) {\r\n      this.monsterCheckValidMove(currentFrameTime)\r\n    }\r\n\r\n    //arrrow handle\r\n    if (this.arrows.length > 0) {\r\n      for (let arrow of this.arrows) {\r\n        if (!arrow.handleMove(currentFrameTime)) {\r\n          this.arrowCheckValidMove(arrow, currentFrameTime)\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    \r\n    //////\r\n    \r\n    \r\n    for (let m = 0; m < this.monsters.length; m++) {\r\n\r\n      let spriteMonster = this.monsters[m];\r\n      let monsterSet = new Image();\r\n      monsterSet.src = \"./src/images/monsterSet.png\";\r\n      this.board.ctx.drawImage(monsterSet, 16, 14, 40, 40, spriteMonster.mapPos[0], spriteMonster.mapPos[1], spriteMonster.size[0], spriteMonster.size[1])\r\n    }\r\n\r\n\r\n\r\n    /////arrows construction zone\r\n\r\n    \r\n\r\n\r\n\r\n    \r\n\r\n    \r\n    for(let a in this.arrows) {\r\n    let arrowSprite = this.arrows[a];\r\n    let arrowSet = new Image();\r\n    arrowSet.src = \"./src/images/blueArrowFrames.png\";\r\n     console.log(this.arrows)\r\n    if (this.arrows.length > 0) {\r\n    this.board.ctx.drawImage(arrowSet, 6, 14, 20, 20, arrowSprite.mapPos[0], arrowSprite.mapPos[1], arrowSprite.size[0], arrowSprite.size[1])\r\n    }\r\n    }\r\n\r\n  \r\n    \r\n\r\n\r\n    /////arrows construction zone\r\n\r\n\r\n\r\n    this.board.ctx.fillStyle = \"#ff0000\";\r\n    this.board.ctx.fillText(this.player.mapPos, 10, 20)\r\n    this.board.ctx.fillText(`FPS: ${this.framesLastSecond}`, 10, 30);\r\n    this.board.ctx.fillText(this.player.currentPos, 10, 50);\r\n    \r\n    this.lastFrameTime = currentFrameTime;\r\n    requestAnimationFrame(this.drawGame);\r\n  }\r\n  \r\n\r\n  \r\n  checkValidMove(currentFrameTime) {\r\n    // if (this.keys[37] && this.keys[38] && this.player.canMoveLeft() && this.player.canMoveUp()) {\r\n    //   this.player.moveUpLeft(currentFrameTime); NEEDS WORK- ANIMATION\r\n    if (this.keys[37] && this.player.canMoveLeft()) {\r\n      this.player.moveLeft(currentFrameTime);\r\n    } else if (this.keys[38] && this.player.canMoveUp()) {\r\n      this.player.moveUp(currentFrameTime);\r\n    } else if (this.keys[39] && this.player.canMoveRight()) {\r\n      this.player.moveRight(currentFrameTime);\r\n    } else if (this.keys[40] && this.player.canMoveDown()) {\r\n      this.player.moveDown(currentFrameTime);\r\n    }\r\n  }\r\n\r\n  monsterCheckValidMove(currentFrameTime) {\r\n    if (this.monsters[0].canMoveLeft() && (this.player.currentPos[0] < this.monsters[0].currentPos[0])) {\r\n      this.monsters[0].moveLeft(currentFrameTime)\r\n    } else if (this.monsters[0].canMoveUp() && (this.player.currentPos[1] < this.monsters[0].currentPos[1])) {\r\n      this.monsters[0].moveUp(currentFrameTime);\r\n    } else if (this.monsters[0].canMoveRight() && (this.player.currentPos[0] > this.monsters[0].currentPos[0])) {\r\n      this.monsters[0].moveRight(currentFrameTime);\r\n    } else if (this.monsters[0].canMoveDown() && (this.player.currentPos[1] > this.monsters[0].currentPos[1])) {\r\n      this.monsters[0].moveDown(currentFrameTime);\r\n    }\r\n  }\r\n\r\n  arrowCheckValidMove(arrow, currentFrameTime) {\r\n    if (arrow.direction === \"right\") {\r\n      if (arrow.canMoveRight()) {\r\n        arrow.moveRight(currentFrameTime);\r\n      }\r\n    } else if (arrow.direction === \"left\") {\r\n      if (arrow.canMoveLeft()) {\r\n        arrow.moveLeft(currentFrameTime);\r\n      }\r\n    } else if (arrow.direction === \"up\") {\r\n      if (arrow.canMoveUp()) {\r\n        arrow.moveUp(currentFrameTime);\r\n      }\r\n    } else if (arrow.direction === \"down\") {\r\n      if (arrow.canMoveDown()) {\r\n        arrow.moveDown(currentFrameTime);\r\n      }\r\n    }\r\n  }\r\n\r\n  getFrame(sprites, duration, time, moving) {\r\n    if (!moving) return sprites[0]\r\n    time = time % duration;\r\n    for (let i in sprites) {\r\n      if (sprites[i].end >= time) return sprites[i];\r\n    }\r\n  }\r\n\r\n};\n\n//# sourceURL=webpack:///./src/game.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/game.js\");\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    const game = new _game__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n    \r\n    \r\n    window.addEventListener(\"keydown\", function(e) {\r\n      if (e.keyCode >= 37 && e.keyCode <= 40 || e.keyCode === 32) game.keys[e.keyCode] = true;   \r\n    });\r\n\r\n    \r\n    // window.addEventListener(\"keydown\", function(e) {\r\n    //   if (e.keyCode === 32) game.keys[e.keyCode] = true;   \r\n    // });\r\n\r\n    // window.addEventListener(\"keyup\", function(e) {\r\n    //   if (e.keyCode === 32) game.keys[e.keyCode] = false;   \r\n    // });\r\n\r\n   \r\n    window.addEventListener(\"keyup\", function(e) {\r\n      if (e.keyCode >= 37 && e.keyCode <= 40 || e.keyCode === 32) game.keys[e.keyCode] = false;   \r\n    });\r\n    \r\n\r\n    requestAnimationFrame(game.drawGame);\r\n\r\n});\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/keys.js":
/*!*********************!*\
  !*** ./src/keys.js ***!
  \*********************/
/*! exports provided: keysDown */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keysDown\", function() { return keysDown; });\nconst keysDown = {\r\n  37: false,\r\n  38: false,\r\n  39: false,\r\n  40: false,\r\n  32: false,\r\n  67: false\r\n};\n\n//# sourceURL=webpack:///./src/keys.js?");

/***/ }),

/***/ "./src/monster.js":
/*!************************!*\
  !*** ./src/monster.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Monster; });\n/* harmony import */ var _board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board */ \"./src/board.js\");\n/* harmony import */ var _monster_sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./monster_sprite */ \"./src/monster_sprite.js\");\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./player */ \"./src/player.js\");\n\r\n\r\n\r\n\r\nclass Monster {\r\n  constructor() {\r\n    this.currentPos = [16, 2]//[[16, 2], [6, 7]];\r\n    this.nextPos = [15, 2];\r\n    this.timeStart = 0;\r\n    this.delayMove = 500;\r\n    this.size = [50, 50]; \r\n    this.mapPos = [1130, 150];//move these to a loop to iterate through in game file[[1130, 150], [570, 500]];\r\n    this.sampleBoard = new _board__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n    this.direction = \"right\";\r\n    this.lastDir = \"right\"\r\n    this.moving = false;\r\n    this.sprites = {\r\n      \"up\": new _monster_sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/knightFrames.png\", { 0: { pos: [5, 167], size: [35, 39] },\r\n                                                                   1: { pos: [40, 166], size: [40, 39] },\r\n                                                                   2: { pos: [85, 165], size: [40, 39] }\r\n                                                                  },\r\n                                                                  200), \r\n      \"right\": new _monster_sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/knightFrames.png\", { 0: { pos: [5, 167], size: [35, 39] },\r\n                                                                     1: { pos: [40, 166], size: [40, 39] },\r\n                                                                     2: { pos: [85, 165], size: [40, 39] }\r\n                                                                   },\r\n                                                                   200), \r\n      \"down\": new _monster_sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/knightFrames.png\", { 0: { pos: [5, 167], size: [35, 39] },\r\n                                                                    1: { pos: [40, 166], size: [40, 39] },\r\n                                                                    2: { pos: [85, 165], size: [40, 39] }\r\n                                                                    },\r\n                                                                    200), \r\n      \"left\": new _monster_sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/knightFrames.png\", { 0: { pos: [84, 30], size: [40, 39] },\r\n                                                                    1: { pos: [50, 29], size: [34, 39] },\r\n                                                                    2: { pos: [15, 29], size: [34, 39] }\r\n                                                                    },\r\n                                                                    200)\r\n\r\n    }\r\n    \r\n  }\r\n  \r\n  move(x, y) {\r\n    this.currentPos = [x, y];\r\n    this.nextPos = [x, y];\r\n    this.mapPos = [\r\n      (this.sampleBoard.tileWidth * x) + ((this.sampleBoard.tileWidth - this.size[0]) / 2), \r\n      (this.sampleBoard.tileHeight * y) + ((this.sampleBoard.tileHeight - this.size[1]) / 2)\r\n    ];\r\n  }\r\n\r\n  handleMove(currentTime) {\r\n    if (this.currentPos[0] === this.nextPos[0] && this.currentPos[1] === this.nextPos[1]) return false;\r\n\r\n    if ((currentTime - this.timeStart) >= this.delayMove ) {\r\n      this.move(this.nextPos[0], this.nextPos[1]);\r\n      this.moving = !this.moving\r\n    } else {\r\n      this.getMapPos();\r\n      this.checkDirectionAndAdjust(currentTime);\r\n      this.mapPos[0] = Math.round(this.mapPos[0]);\r\n      this.mapPos[1] = Math.round(this.mapPos[1]);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getMapPos() {// \r\n    this.mapPos[0] = (this.currentPos[0] * this.sampleBoard.tileWidth) + ((this.sampleBoard.tileWidth - this.size[0]) / 2);\r\n    this.mapPos[1] = (this.currentPos[1] * this.sampleBoard.tileHeight) + ((this.sampleBoard.tileHeight - this.size[1]) / 2);\r\n  }\r\n\r\n  checkDirectionAndAdjust(currentTime) {\r\n    if (this.nextPos[0] !== this.currentPos[0]) {\r\n      let pixelDist = (this.sampleBoard.tileWidth / this.delayMove) * (currentTime - this.timeStart);\r\n\r\n      if (this.nextPos[0] < this.currentPos[0]) {\r\n        this.mapPos[0] += (0 - pixelDist);\r\n      } else {\r\n        this.mapPos[0] += (pixelDist);\r\n      }\r\n    } else {\r\n      let pixelDist = (this.sampleBoard.tileHeight / this.delayMove) * (currentTime - this.timeStart);\r\n\r\n      if (this.nextPos[1] < this.currentPos[1]) {\r\n        this.mapPos[1] += (0 - pixelDist);\r\n      } else {\r\n        this.mapPos[1] += (pixelDist);\r\n      }\r\n    }\r\n  }\r\n\r\n  toIndex(x, y) {\r\n    return ((y * this.sampleBoard.mapWidth) + x);\r\n  }\r\n\r\n  isWalkable(x, y) {\r\n    if (x < 0 || x >= this.sampleBoard.mapWidth || y < 0 || y >= this.sampleBoard.mapHeight) return false;\r\n    if (this.sampleBoard.tileTypes[this.sampleBoard.gameMap[this.toIndex(x, y)]].floor !== this.sampleBoard.floorTypes.walkable) return false; \r\n    return true;\r\n  }\r\n\r\n  canMoveUp() {\r\n    return this.isWalkable(this.currentPos[0], this.currentPos[1] - 1);\r\n  }\r\n\r\n  canMoveDown() {\r\n    return this.isWalkable(this.currentPos[0], this.currentPos[1] + 1);\r\n  }\r\n\r\n  canMoveLeft() {\r\n    return this.isWalkable(this.currentPos[0] - 1, this.currentPos[1]);\r\n  }\r\n\r\n  canMoveRight() {\r\n    return this.isWalkable(this.currentPos[0] + 1, this.currentPos[1]);\r\n  }\r\n\r\n  moveUp(currentGameTime) {\r\n    this.nextPos[1] -= 1;\r\n    this.timeStart = currentGameTime;\r\n    if (this.lastDir === \"left\") this.direction = \"left\";\r\n    this.moving = true;\r\n  }\r\n  \r\n  moveDown(currentGameTime) {\r\n    this.nextPos[1] += 1;\r\n    this.timeStart = currentGameTime;\r\n    if (this.lastDir === \"left\") this.direction = \"left\";\r\n    this.moving = true;\r\n  }\r\n\r\n  moveLeft(currentGameTime) {\r\n    this.nextPos[0] -= 1;\r\n    this.timeStart = currentGameTime;\r\n    this.direction = \"left\";\r\n    this.moving = true; \r\n  }\r\n\r\n  moveRight(currentGameTime) {\r\n    this.nextPos[0] += 1;\r\n    this.timeStart = currentGameTime;\r\n    this.direction = \"right\";\r\n    this.moving = true;\r\n  }\r\n\r\n}\r\n\r\n  // moveUpLeft(currentGameTime) {\r\n  //   this.nextPos[0] -= 1;  NEEDS WORK-ANIMATION\r\n  //   this.nextPos[1] -= 1;\r\n  //   this.timeStart = currentGameTime;\r\n  //   this.direction = \"upLeft\"\r\n  //   this.moving = true;\r\n  // }\r\n  \r\n\n\n//# sourceURL=webpack:///./src/monster.js?");

/***/ }),

/***/ "./src/monster_sprite.js":
/*!*******************************!*\
  !*** ./src/monster_sprite.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MonsterSprite; });\nclass MonsterSprite {\r\n    constructor(url, frames, aniTime) {\r\n      this.url = url;\r\n      // this.speed= speed;\r\n      this.frames = frames; \r\n      this.aniTime = aniTime;\r\n    }\r\n    \r\n};\n\n//# sourceURL=webpack:///./src/monster_sprite.js?");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Player; });\n/* harmony import */ var _board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board */ \"./src/board.js\");\n/* harmony import */ var _character_sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./character_sprite */ \"./src/character_sprite.js\");\n\r\n\r\n\r\nclass Player {\r\n  constructor() {\r\n    this.currentPos = [1, 4];\r\n    this.nextPos = [1, 4];\r\n    this.timeStart = 0;\r\n    this.delayMove = 300;\r\n    this.size = [50, 50]; \r\n    this.mapPos = [90, 290];\r\n    this.sampleBoard = new _board__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n    this.direction = \"right\";\r\n    this.shootDir = {\r\n      \"right\": [1, 0],\r\n      \"left\": [-1, 0],\r\n      \"up\": [0, -1],\r\n      \"down\": [0, 1]\r\n    };\r\n    this.lastDir = \"right\"\r\n    this.moving = false;\r\n    this.sprites = {\r\n      \"up\": new _character_sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/knightFrames.png\", { 0: { pos: [1, 84], size: [46, 43] },\r\n                                                                   1: { pos: [57, 83], size: [46, 43] },\r\n                                                                   2: { pos: [111, 85], size: [46, 43] }\r\n                                                                  },\r\n                                                                  200), \r\n      \"right\": new _character_sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/knightFrames.png\", { 0: { pos: [5, 160], size: [35, 43] },\r\n                                                                     1: { pos: [40, 159], size: [40, 43] },\r\n                                                                     2: { pos: [85, 157], size: [40, 43] }\r\n                                                                   },\r\n                                                                   200), \r\n      \"down\": new _character_sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/knightFrames.png\", { 0: { pos: [11, 220], size: [46, 40] },\r\n                                                                    1: { pos: [81, 220], size: [46, 40] },\r\n                                                                    2: { pos: [162, 217], size: [46, 40] }\r\n                                                                    },\r\n                                                                    200), \r\n      \"left\": new _character_sprite__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"./src/images/knightFrames.png\", { 0: { pos: [83, 15], size: [35, 42] },\r\n                                                                    1: { pos: [46, 13], size: [36, 42] },\r\n                                                                    2: { pos: [10, 15], size: [36, 43] }\r\n                                                                    },\r\n                                                                    200)\r\n\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  move(x, y) {\r\n    this.currentPos = [x, y];\r\n    this.nextPos = [x, y];\r\n    this.mapPos = [\r\n      (this.sampleBoard.tileWidth * x) + ((this.sampleBoard.tileWidth - this.size[0]) / 2), \r\n      (this.sampleBoard.tileHeight * y) + ((this.sampleBoard.tileHeight - this.size[1]) / 2)\r\n    ];\r\n  }\r\n\r\n  handleMove(currentTime) {\r\n    if (this.currentPos[0] === this.nextPos[0] && this.currentPos[1] === this.nextPos[1]) return false;\r\n\r\n    if ((currentTime - this.timeStart) >= this.delayMove ) {\r\n      this.move(this.nextPos[0], this.nextPos[1]);\r\n      this.moving = !this.moving\r\n    } else {\r\n      this.getMapPos();\r\n      this.checkDirectionAndAdjust(currentTime);\r\n      this.mapPos[0] = Math.round(this.mapPos[0]);\r\n      this.mapPos[1] = Math.round(this.mapPos[1]);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getMapPos() {// \r\n    this.mapPos[0] = (this.currentPos[0] * this.sampleBoard.tileWidth) + ((this.sampleBoard.tileWidth - this.size[0]) / 2);\r\n    this.mapPos[1] = (this.currentPos[1] * this.sampleBoard.tileHeight) + ((this.sampleBoard.tileHeight - this.size[1]) / 2);\r\n  }\r\n\r\n  checkDirectionAndAdjust(currentTime) {\r\n    if (this.nextPos[0] !== this.currentPos[0]) {\r\n      let pixelDist = (this.sampleBoard.tileWidth / this.delayMove) * (currentTime - this.timeStart);\r\n\r\n      if (this.nextPos[0] < this.currentPos[0]) {\r\n        this.mapPos[0] += (0 - pixelDist);\r\n      } else {\r\n        this.mapPos[0] += (pixelDist);\r\n      }\r\n    } else {\r\n      let pixelDist = (this.sampleBoard.tileHeight / this.delayMove) * (currentTime - this.timeStart);\r\n\r\n      if (this.nextPos[1] < this.currentPos[1]) {\r\n        this.mapPos[1] += (0 - pixelDist);\r\n      } else {\r\n        this.mapPos[1] += (pixelDist);\r\n      }\r\n    }\r\n  }\r\n\r\n  toIndex(x, y) {\r\n    return ((y * this.sampleBoard.mapWidth) + x);\r\n  }\r\n\r\n  isWalkable(x, y) {\r\n    if (x < 0 || x >= this.sampleBoard.mapWidth || y < 0 || y >= this.sampleBoard.mapHeight) return false;\r\n    if (this.sampleBoard.tileTypes[this.sampleBoard.gameMap[this.toIndex(x, y)]].floor !== this.sampleBoard.floorTypes.walkable) return false; \r\n    return true;\r\n  }\r\n\r\n  canMoveUp() {\r\n    return this.isWalkable(this.currentPos[0], this.currentPos[1] - 1);\r\n  }\r\n\r\n  canMoveDown() {\r\n    return this.isWalkable(this.currentPos[0], this.currentPos[1] + 1);\r\n  }\r\n\r\n  canMoveLeft() {\r\n    return this.isWalkable(this.currentPos[0] - 1, this.currentPos[1]);\r\n  }\r\n\r\n  canMoveRight() {\r\n    return this.isWalkable(this.currentPos[0] + 1, this.currentPos[1]);\r\n  }\r\n\r\n  moveUp(currentGameTime) {\r\n    this.nextPos[1] -= 1;\r\n    this.timeStart = currentGameTime;\r\n    this.direction = \"up\"\r\n    this.moving = true;\r\n  }\r\n  \r\n  moveDown(currentGameTime) {\r\n    this.nextPos[1] += 1;\r\n    this.timeStart = currentGameTime;\r\n    this.direction = \"down\";\r\n    this.moving = true;\r\n  }\r\n\r\n  moveLeft(currentGameTime) {\r\n    this.nextPos[0] -= 1;\r\n    this.timeStart = currentGameTime;\r\n    this.direction = \"left\";\r\n    this.moving = true; \r\n  }\r\n\r\n  moveRight(currentGameTime) {\r\n    this.nextPos[0] += 1;\r\n    this.timeStart = currentGameTime;\r\n    this.direction = \"right\";\r\n    this.moving = true;\r\n  }\r\n\r\n  // moveUpLeft(currentGameTime) {\r\n  //   this.nextPos[0] -= 1;  NEEDS WORK-ANIMATION\r\n  //   this.nextPos[1] -= 1;\r\n  //   this.timeStart = currentGameTime;\r\n  //   this.direction = \"upLeft\"\r\n  //   this.moving = true;\r\n  // }\r\n\r\n};\r\n\r\n\n\n//# sourceURL=webpack:///./src/player.js?");

/***/ }),

/***/ "./src/sprite.js":
/*!***********************!*\
  !*** ./src/sprite.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Sprite; });\nclass Sprite {\r\n  constructor(url, pos, size) {\r\n    this.url = url;\r\n    this.pos = pos;\r\n    this.size = size;\r\n    // this.dir = dir;\r\n    // this.speed= speed;\r\n    // this.frames = frames; \r\n    // this._index = 0;\r\n  }\r\n\r\n};\n\n//# sourceURL=webpack:///./src/sprite.js?");

/***/ })

/******/ });